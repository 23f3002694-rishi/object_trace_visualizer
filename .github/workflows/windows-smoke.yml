name: windows-smoke

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  windows-smoke:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Environment snapshot
        shell: powershell
        run: |
          Write-Host "### environment snapshot ###"
          python --version
          python -c "import platform; print(platform.platform())"
          python -m pip --version
          python -m pip list --format=columns | Select-Object -First 50

      - name: Network diagnostics (pre-install)
        shell: powershell
        run: |
          Write-Host "Checking reachability to chocolatey.org and common mirrors"
          try { curl -I https://chocolatey.org -UseBasicParsing } catch { Write-Host "curl failed" }
          try { Test-NetConnection chocolatey.org -Port 443 } catch { Write-Host "Test-NetConnection failed" }
          try { nslookup chocolatey.org } catch { Write-Host "nslookup failed" }

      - name: Install FFmpeg with Chocolatey (retries, extended timeout, verbose)
        id: choco-ffmpeg
        shell: powershell
        run: |
          $tries = 3
          $success = $false
          $log = Join-Path $env:GITHUB_WORKSPACE 'choco-install-ffmpeg.log'
          if (Test-Path $log) { Remove-Item $log -Force }
          for ($i = 1; $i -le $tries; $i++) {
            Write-Host "choco attempt $i/$tries - starting at $(Get-Date -Format o)"
            choco install ffmpeg -y --execution-timeout=2700 -v 4 *>&1 | Tee-Object -FilePath $log -Append
            if ($LASTEXITCODE -eq 0) {
              Write-Host "choco install succeeded on attempt $i"
              $success = $true
              break
            }
            Write-Host "choco install failed on attempt $i with exit code $LASTEXITCODE"
            Start-Sleep -Seconds (30 * $i)
          }
          if (-not $success) {
            Write-Host "FFmpeg install failed after $tries attempts. Attaching log and exiting with failure."
            Write-Host "Log path: $log"
            exit 1
          }

      - name: Upload choco log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: choco-ffmpeg-log
          path: choco-install-ffmpeg.log

      - name: Verify ffmpeg in PATH
        shell: powershell
        run: |
          $ff = & ffmpeg -version 2>$null
          if ($LASTEXITCODE -ne 0) { Write-Host "ffmpeg not found in PATH"; exit 1 }
          Write-Host "ffmpeg found:"
          ffmpeg -version

      - name: Setup Python venv and install CI deps
        shell: powershell
        run: |
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1
          python -m pip install --upgrade pip setuptools wheel
          if (Test-Path ci/requirements.ci.txt) { python -m pip install -r ci/requirements.ci.txt } else { Write-Host "ci/requirements.ci.txt not found, skipping" }

      - name: Run tests
        shell: powershell
        run: |
          .\.venv\Scripts\Activate.ps1
          python -m pytest tests -q

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: |
            pytest.xml
            junit*.xml
