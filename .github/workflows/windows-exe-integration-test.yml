name: windows-exe-integration-test

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-test-windows:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Create and activate venv, install PyInstaller + requirements
        shell: powershell
        run: |
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1
          python -m pip install --upgrade pip
          pip install pyinstaller
          if (Test-Path requirements.txt) {
            Write-Host "Installing project requirements..."
            pip install -r requirements.txt
          }

      - name: Build EXE with PyInstaller
        shell: powershell
        run: |
          .\.venv\Scripts\Activate.ps1
          $ErrorActionPreference = 'Continue'

          Write-Host "PWD = $((Get-Location).Path)"
          Write-Host "Files at root:"
          Get-ChildItem -Name

          if (-not (Test-Path "launch_viewer_webview.py")) {
            Write-Error "launch_viewer_webview.py not found at repo root"
            exit 1
          }
          if (-not (Test-Path "viewer")) {
            Write-Error "viewer/ directory not found at repo root"
            exit 1
          }

          Remove-Item -Recurse -Force build, dist, *.spec -ErrorAction SilentlyContinue

          pyinstaller --clean --log-level=DEBUG --onefile --console `
            --add-data "viewer;viewer" `
            --distpath dist --workpath build --specpath . `
            launch_viewer_webview.py 2>&1 | Tee-Object pyinstaller_build_log.txt

          $warn = Get-ChildItem build -Filter "warn-*.txt" -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1
          if ($warn) {
            Write-Host "=== PyInstaller warn file (tail 200) ==="
            Get-Content $warn.FullName -Tail 200
          }

          if (-not (Test-Path "dist\launch_viewer_webview.exe")) {
            Write-Error "Build failed: dist\launch_viewer_webview.exe not found"
            if (Test-Path "pyinstaller_build_log.txt") {
              Write-Host "=== PyInstaller build log (tail 200) ==="
              Get-Content .\pyinstaller_build_log.txt -Tail 200
            }
            exit 1
          }
          $exe = Get-Item "dist\launch_viewer_webview.exe"
          Write-Host "âœ… Build succeeded: EXE size $($exe.Length) bytes"

      - name: Run integration test against EXE
        shell: powershell
        env:
          PYTHONUTF8: 1
        run: |
          .\.venv\Scripts\Activate.ps1
          New-Item -ItemType Directory -Path integration_test_artifacts -Force | Out-Null

          python .\integration_test.py --exe "dist\launch_viewer_webview.exe" --port 60031 --no-new-console *> integration_test_with_exe_log.txt

          Write-Host "=== Integration Test Log (tail 200) ==="
          Get-Content .\integration_test_with_exe_log.txt -Tail 200

      - name: Upload integration test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration_test_artifacts
          path: integration_test_artifacts/

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build_artifacts
          path: |
            dist/launch_viewer_webview.exe
            pyinstaller_build_log.txt
            build/
            *.spec
