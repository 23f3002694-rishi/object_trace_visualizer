name: windows-exe-integration-test

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-test-windows:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Create and activate venv and install PyInstaller
        shell: powershell
        run: |
          python -m venv .venv
          .\.venv\Scripts\Activate.ps1
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build EXE with PyInstaller (diagnose)
        shell: powershell
        run: |
          .\.venv\Scripts\Activate.ps1

          Write-Host "GITHUB_WORKSPACE = $env:GITHUB_WORKSPACE"
          Write-Host "Python version: $(python --version)"
          Write-Host "PyInstaller version: $(pyinstaller --version)"

          # Stay at repo root
          Set-Location $env:GITHUB_WORKSPACE
          Write-Host "PWD = $(Get-Location)"
          Write-Host "Top-level files:"
          Get-ChildItem -Force | Select-Object Name,Length | Format-Table -AutoSize

          # Verify src layout
          if (-not (Test-Path "src\launch_viewer_webview.py")) {
            Write-Error "File src\launch_viewer_webview.py not found."
            exit 1
          }
          if (-not (Test-Path "src\viewer")) {
            Write-Error "Directory src\viewer not found."
            exit 1
          }

          # Clean old builds
          Remove-Item -Recurse -Force src\build, src\dist, src\*.spec -ErrorAction SilentlyContinue

          # Build EXE bundling src/viewer
          pyinstaller --clean --log-level=DEBUG --onefile --console `
            --add-data "src/viewer;viewer" `
            --distpath src\dist --workpath src\build --specpath src\build `
            src/launch_viewer_webview.py

          # Show any PyInstaller warnings
          $warn = Get-ChildItem src\build -Filter "warn-*.txt" -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1
          if ($warn) {
            Write-Host "=== PyInstaller warn file: $($warn.FullName) ==="
            Get-Content $warn.FullName -Tail 200
          }

          # Verify EXE output
          if (-not (Test-Path "src\dist\launch_viewer_webview.exe")) {
            Write-Error "Build failed: src\dist\launch_viewer_webview.exe not found"
            exit 1
          }
          $exe = Get-Item "src\dist\launch_viewer_webview.exe"
          Write-Host "âœ… Build succeeded: EXE size $($exe.Length) bytes"

      - name: Run integration test against EXE
        shell: powershell
        env:
          PYTHONUTF8: 1
        run: |
          .\.venv\Scripts\Activate.ps1
          New-Item -ItemType Directory -Path integration_test_artifacts -Force | Out-Null

          python .\integration_test.py `
            --exe "src\dist\launch_viewer_webview.exe" `
            --port 60031 --no-new-console *> integration_test_with_exe_log.txt

          Write-Host "=== Integration Test Log (tail 200) ==="
          Get-Content .\integration_test_with_exe_log.txt -Tail 200

      - name: Collect integration test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration_test_artifacts
          path: integration_test_artifacts/

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build_artifacts
          path: |
            src/dist/launch_viewer_webview.exe
            src/build/
            src/*.spec
